import synthesizer

const MAX_TEXT = 20 # 5..30
const ROW_WIDTH = 20 # 10..40
const ROW_COUNT = 240 / ROW_WIDTH
const RAIN_COLOR = 246 # HUE
const SERVO_PIN = C_PIN_05     # Servo on IO01

#setTime(6,59,55)  # sets the time manually

def initServo():
    setPWMFrequency(50) # Servo runs on 50Hz

def openLid():
    start = -80
    for i in 115:
        dutyCycle = map(start, 90, -90, 102, 512)
        writePWM(SERVO_PIN, dutyCycle)
        start++
        delay(20)

def closeLid():
    start = 35
    for i in 115:
        dutyCycle = map(start, 90, -90, 102, 512)
        writePWM(SERVO_PIN, dutyCycle)
        start--
        delay(20)

def gong(gongs:byte):
    allNotesOff()
    delay(2000)

    masterVolume(120)
    channel(5)
    instrumentSet(0)
    instrument(6) # El. Piano 2

    for i in gongs:
        noteOn(noteToNum("C4"),127)
        noteOn(noteToNum("E4"),127)
        noteOn(noteToNum("G4"),127)
        delay(2000)
    allNotesOff()

def printTime():
    push()    
    strokeHSV(RAIN_COLOR,100,255)
    textFont(FONT_ROBOTO_BOLD_64)
    h = getHour()
    m = getMinute()
    hz = ""
    if h < 10: hz = "0"
    mz = ""
    if m < 10: mz = "0"

    time = hz + h + ":" + mz + m
    translate(120,120)
    scale(1.2)
    drawTextCentered(0,0, time)
    pop()

digits = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$+*%="

class RainDrop:
    pos:vector
    len:byte
    text:byte[MAX_TEXT]
    velocity:byte

    def init(initialColumn:int):
        pos = vector(x=initialColumn*ROW_WIDTH,y=random(-200,0))
        
        velocity = random(5,20)
        len = random(4,MAX_TEXT)
        pos.y = pos.y - (len*16)
        for i in len:
            text[i] = digits[random(0,strLen(digits))]
    def step():
        pos.y+=velocity
        if pos.y > 240: init(pos.x / ROW_WIDTH)
        charpos = random(0,len)
        text[charpos] = digits[random(0,strLen(digits))]
    
    def draw():
        push()
        textFont(FONT_ROBOTO_16)
        translate(pos.x,pos.y)
        strokeHSV(RAIN_COLOR,255,map(velocity,5,20,100,255))
        for i in len:   
            buf:byte[2]
            buf[0] = text[i]
            buf[1] = 0
            drawText(0,i*16,buf)
        pop()

rainDrops:RainDrop[24]

for i in sizeof(rainDrops):
    rainDrops[i].init(i)

initServo()

def onDraw():
    clear()
    for i in sizeof(rainDrops):
        rainDrops[i].step()
        rainDrops[i].draw()

    printTime()
    update()

    if getMinute() == 0 and getSecond() == 0:    
        openLid()
        delay(1000)
        gong(getHour()%12)
        delay(1000)
        closeLid()
    delay(20)

def onClick():
    openLid()
    delay(1000)
    gong(getHour()%12)
    delay(1000)
    closeLid()
